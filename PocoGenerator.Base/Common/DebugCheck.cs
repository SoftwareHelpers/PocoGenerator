// <auto-generated/>
namespace PocoGenerator.Base.Common
{
    using System.Diagnostics;

    /// <summary>
    /// The debug check.
    /// </summary>
    public class DebugCheck
    {
        /// <summary>
        /// The not null.
        /// </summary>
        /// <param name="value">
        /// The value.
        /// </param>
        /// <typeparam name="T">
        /// </typeparam>
        [Conditional("DEBUG")]
        public static void NotNull<T>(T value) where T : class
        {
            Debug.Assert(value != null);
        }

        /// <summary>
        /// The not null.
        /// </summary>
        /// <param name="value"> The value. </param>
        /// <typeparam name="T"> Type of paramter </typeparam>
        [Conditional("DEBUG")]
        public static void NotNull<T>(T? value) where T : struct
        {
            Debug.Assert(value != null);
        }

        /// <summary>
        /// The not empty.
        /// </summary>
        /// <param name="value"> The value.
        /// </param>
        [Conditional("DEBUG")]
        public static void NotEmpty(string value)
        {
            Debug.Assert(!string.IsNullOrWhiteSpace(value));
        }
    }
}
